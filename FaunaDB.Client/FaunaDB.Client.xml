<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FaunaDB.Client</name>
    </assembly>
    <members>
        <member name="T:FaunaDB.Client.DefaultClientIO">
            <summary>
            Default client that handles all http connections using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:FaunaDB.Client.DefaultClientIO.AuthHeader(System.String)">
            <summary>
            Adds a header with Bearer Auth Token.
            </summary>
        </member>
        <member name="M:FaunaDB.Client.DefaultClientIO.QueryString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Convert query parameters to a URL string.
            </summary>
        </member>
        <member name="T:FaunaDB.Client.HttpRequestExtensions">
            <summary>
            Http Client proper timing out
            </summary>
        </member>
        <member name="T:FaunaDB.Client.FaunaClient">
            <summary>
            C# native client for FaunaDB.
            <para>Queries are constructed by using static helpers in <see cref="T:FaunaDB.Query.Language"/> package.</para>
            </summary>
            <example>
            <code language="cs">
            var client = new FaunaClient(secret: "someAuthToken");
            client.Query(Get(Ref("some/ref")));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.#ctor(System.String,System.String,System.Nullable{System.TimeSpan},System.Net.Http.HttpClient,System.Version,System.Boolean)">
            <summary>
            Constructs a new instance of <see cref="T:FaunaDB.Client.FaunaClient"/> with the specified arguments.
            </summary>
            <param name="secret">Auth token for the FaunaDB server.</param>
            <param name="endpoint">URL for the FaunaDB server. Defaults to "https://db.fauna.com:443"</param>
            <param name="timeout">Timeout for I/O operations. Defaults to 1 minute.</param>
            <param name="httpVersion">Version of http. Default value is HttpVersion.Version11, is you use .net core 3.0 and above you can enable http/2 support by passing HttpVersion.Version20</param>
            <param name="checkNewVersion">Check new NuGet package driver version. Default value is true (Check new version).</param>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.#ctor(FaunaDB.Client.IClientIO)">
            <summary>
            Constructs a new instance of <see cref="T:FaunaDB.Client.FaunaClient"/> with the specified <see cref="T:FaunaDB.Client.IClientIO"/>.
            </summary>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.NewSessionClient(System.String)">
            <summary>
            Creates a new <see cref="T:FaunaDB.Client.FaunaClient"/> with the user secret provided. Queries submitted to a session client will be
            authenticated with the secret provided. A session client shares its parent's internal resources.
            </summary>
            <param name="secret">Auth token for the FaunaDB server.</param>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.Query(FaunaDB.Query.Expr,System.Nullable{System.TimeSpan})">
            <summary>
            Issues a Query to FaunaDB.
            <para>
            Queries are modeled through the FaunaDB query language, represented by the helper functions in the <see cref="T:FaunaDB.Query.Language"/> class.
            </para>
            <para>
            Responses are modeled as a general response tree. Each node is a <see cref="T:FaunaDB.Types.Value"/>, and
            can be coerced to structured types through various methods on that class.
            </para>
            </summary>
            <param name="expression">Expression generated by methods of <see cref="T:FaunaDB.Query.Language"/>.</param>
            <param name="queryTimeout">Timeout for that specific query (it will override the client timetout, if any).</param>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.Query(FaunaDB.Query.Expr[])">
            <summary>
            Issues multiple queries to FaunaDB.
            <para>
            These queries are sent to FaunaDB in a single request, and are evaluated. The list of response nodes is returned
            in the same order as the issued queries.
            </para>
            <para>
            See <see cref="!:Query(Expr)"/> for more information on the individual queries.
            </para>
            </summary>
            <param name="expressions">the list of query expressions to be sent to FaunaDB.</param>
            <returns>a <see cref="T:System.Threading.Tasks.Task"/> containing an ordered list of root response nodes.</returns>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.Query(System.TimeSpan,FaunaDB.Query.Expr[])">
            <summary>
            Issues multiple queries to FaunaDB.
            <para>
            These queries are sent to FaunaDB in a single request, and are evaluated. The list of response nodes is returned
            in the same order as the issued queries.
            </para>
            <para>
            See <see cref="!:Query(Expr)"/> for more information on the individual queries.
            </para>
            </summary>
            <param name="queryTimeout">Timeout for that specific query (it will override the client timetout, if any).</param>
            <param name="expressions">the list of query expressions to be sent to FaunaDB.</param>
            <returns>a <see cref="T:System.Threading.Tasks.Task"/> containing an ordered list of root response nodes.</returns>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.Query(System.Collections.Generic.IEnumerable{FaunaDB.Query.Expr},System.Nullable{System.TimeSpan})">
            <summary>
            Issues multiple queries to FaunaDB.
            <para>
            These queries are sent to FaunaDB in a single request, and are evaluated. The list of response nodes is returned
            in the same order as the issued queries.
            </para>
            <para>
            See <see cref="!:Query(Expr)"/> for more information on the individual queries.
            </para>
            </summary>
            <param name="expressions">the list of query expressions to be sent to FaunaDB.</param>
            <param name="queryTimeout">Timeout for that specific query (it will override the client timetout, if any).</param>
            <returns>a <see cref="T:System.Threading.Tasks.Task"/> containing an ordered list of root response nodes.</returns>
        </member>
        <member name="M:FaunaDB.Client.FaunaClient.Ping(System.String,System.Nullable{System.Int32})">
            <summary>
            Check service health.
            </summary>
            <param name="scope">Must be "node", "local", "global", or "all". Defaults to "global"</param>
            <param name="timeout">Time to wait for the ping to succeed, in milliseconds.</param>
            <returns>a <see cref="T:System.Threading.Tasks.Task"/> with the message representing the result operation</returns>
        </member>
        <member name="T:FaunaDB.Client.HttpMethodKind">
            <summary>
            A method used by the <see cref="T:FaunaDB.Client.FaunaClient"/>.
            </summary>
        </member>
        <member name="M:FaunaDB.Client.HttpMethodKindExtensions.Name(FaunaDB.Client.HttpMethodKind)">
            <summary>
            All-caps name of the method.
            </summary>
        </member>
        <member name="T:FaunaDB.Client.IClientIO">
            <summary>
            Handles actual I/O for a <see cref="T:FaunaDB.Client.FaunaClient"/>.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.LastSeen.Txn">
            <summary>
              Returns the last seen transaction time, if any.
            </summary>
        </member>
        <member name="M:FaunaDB.Client.LastSeen.SetTxn(System.Int64)">
            <summary>
              Set the last seen transaction time to the given time, if
              time is greater than the previously-seen time.
            </summary>
        </member>
        <member name="T:FaunaDB.Client.RequestResult">
            <summary>
            Stores information about a single request and response.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.Method">
            <summary>
            HTTP method that was used.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.Path">
            <summary>
            Path that was queried. Relative to client's domain.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.Query">
            <summary>
            The query parameters submitted on the request.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.RequestContent">
            <summary>
            String data submited for the server.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.ResponseContent">
            <summary>
            String returned by the server.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.StatusCode">
            <summary>
            Http status code result of the request.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.ResponseHeaders">
            <summary>
            Response headers returned by the FaunaDB server.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.StartTime">
            <summary>
            <see cref="T:System.DateTime"/> when the query was issued.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.EndTime">
            <summary>
            <see cref="T:System.DateTime"/> when the query finished.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.RequestResult.TimeTaken">
            <summary>
            Indicates how long the query took to execute.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.Method">
            <summary>
            HTTP method that was used.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.Path">
            <summary>
            Path that was queried. Relative to client's domain.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.Query">
            <summary>
            The query parameters submitted on the request.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.RequestContent">
            <summary>
            String data submited for the server.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.ResponseContent">
            <summary>
            String returned by the server.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.StatusCode">
            <summary>
            Http status code result of the request.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.ErrorContent">
            <summary>
            Http content message in case request results in an error response.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.ResponseHeaders">
            <summary>
            Response headers returned by the FaunaDB server.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.StartTime">
            <summary>
            <see cref="T:System.DateTime"/> when the query was issued.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.EndTime">
            <summary>
            <see cref="T:System.DateTime"/> when the query finished.
            </summary>
        </member>
        <member name="P:FaunaDB.Client.StreamingRequestResult.TimeTaken">
            <summary>
            Indicates how long the query took to execute.
            </summary>
        </member>
        <member name="M:FaunaDB.Client.Utils.DateTimeExtensions.ToFaunaTime(System.DateTime)">
            <summary>
            Will return a Fauna <see cref="T:FaunaDB.Types.TimeV"/> object.
            </summary>
            <returns> <see cref="T:FaunaDB.Types.TimeV"/></returns>
        </member>
        <member name="M:FaunaDB.Client.Utils.DateTimeExtensions.ToFaunaDate(System.DateTime)">
            <summary>
            Will return a Fauna <see cref="T:FaunaDB.Types.DateV"/> object.
            </summary>
            <returns> <see cref="T:FaunaDB.Types.DateV"/></returns>
        </member>
        <member name="M:FaunaDB.Client.Utils.DateTimeExtensions.ToFaunaTime(System.DateTimeOffset)">
            <summary>
            Will return a Fauna <see cref="T:FaunaDB.Types.TimeV"/> object.
            </summary>
            <returns> <see cref="T:FaunaDB.Types.TimeV"/></returns>
        </member>
        <member name="M:FaunaDB.Client.Utils.DateTimeExtensions.ToFaunaDate(System.DateTimeOffset)">
            <summary>
            Will return a Fauna <see cref="T:FaunaDB.Types.DateV"/> object.
            </summary>
            <returns> <see cref="T:FaunaDB.Types.DateV"/></returns>
        </member>
        <member name="T:FaunaDB.Errors.FaunaException">
            <summary>
            Error returned by the FaunaDB server.
            For documentation of error types, see the <see href="https://fauna.com/documentation#errors">docs</see>.
            </summary>
        </member>
        <member name="P:FaunaDB.Errors.FaunaException.Errors">
            <summary>
            List of all errors sent by the server.
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.BadRequest">
            <summary>
            HTTP 400 error.
            An exception thrown if FaunaDB cannot evaluate a query.
            <para>HTTP 400 error.</para>
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.Unauthorized">
            <summary>
            HTTP 401 error.
            An exception thrown if FaunaDB responds with an HTTP 401 (Unauthorized).
            <para>HTTP 401 error.</para>
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.PermissionDenied">
            <summary>
            HTTP 403 error.
            An exception thrown if FaunaDB responds with an HTTP 403 (Permission Denied).
            <para>HTTP 403 error.</para>
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.NotFound">
            <summary>
            HTTP 404 error.
            An exception thrown if a HTTP 404 (Not Found) is returned from FaunaDB.
            <para>HTTP 404 error.</para>
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.InternalError">
            <summary>
            HTTP 500 error.
            An exception thrown if a HTTP 500 (Internal Server Error) occurs when making a request to FaunaDB. Such
            errors represent an internal failure within the database.
            <para>HTTP 500 error.</para>
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.UnavailableError">
            <summary>
            HTTP 503 error.
            An exception thrown if a FaunaDB host is unavailable for any reason. For example, if the client cannot connect
            to the host, or if the host does not respond.
            <para>HTTP 503 error.</para>
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.StreamingException">
            <summary>
            An exception thrown if an error response returned during consumption of a stream
            </summary>
        </member>
        <member name="T:FaunaDB.Errors.UnknowException">
            <summary>
            An exception thrown if a FaunaDB response is unknown or unparseable by the client.
            </summary>
        </member>
        <member name="T:FaunaDB.Query.Expr">
            <summary>
            A query language expression. Constructors for this class are at the <see cref="T:FaunaDB.Query.Language"/> class.
            </summary>
        </member>
        <member name="T:FaunaDB.Query.Language">
             <summary>
             Methods modeling the FaunaDB query language. This class is intended to be statically imported into your code:
             <para>
             <c>using static FaunaDB.Query.Language;</c>
             </para>
             </summary>
             <example>
             Each of these methods constructs a <see cref="T:FaunaDB.Query.Expr"/>, which can then be composed with other methods to form complex
             expressions.
            
             <code>
               Expr existsValue = Exists(Ref("some/ref"));
            
               Expr createValue = Create(
                Ref("classes/some_class"),
                Obj("data",
                  Obj("some", "field"))
               );
             </code>
             </example>
             <see href="https://fauna.com/documentation/queries">FaunaDB Query API</see>
        </member>
        <member name="M:FaunaDB.Query.Language.Login(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Login expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#auth_functions">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Logout(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Logout expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#auth_functions">docs</see>.
            </para>
            </summary>
            <param name="deleteTokens"><see cref="T:FaunaDB.Query.Expr"/> object where, True will delete all tokens associated with the current session. False will delete only the token used in this request</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Logout(System.Boolean)">
            <summary>
            Creates a new Logout expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#auth_functions">docs</see>.
            </para>
            </summary>
            <param name="deleteTokens">True will delete all tokens associated with the current session. False will delete only the token used in this request</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Identify(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Identify expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/identify">docs</see>.
            </para>
            </summary>
            <param name="ref">Reference to the object</param>
            <param name="password">Password to be validated</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Identity">
            <summary>
            Creates a new Identity expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/identity">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CurrentIdentity">
            <summary>
            Creates a new CurrentIdentity expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/currentidentity">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.HasIdentity">
            <summary>
            Creates a new HasIdentity expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/hasidentity">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.HasCurrentIdentity">
            <summary>
            Creates a new HasCurrentIdentity expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/hascurrentidentity">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CurrentToken">
            <summary>
            Creates a new CurrentToken expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/currenttoken">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.HasCurrentToken">
            <summary>
            Creates a new HasCurrentToken expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/hascurrenttoken">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.AccessProviders(FaunaDB.Query.Expr)">
            <summary>
            Creates a new AccessProviders expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/accessprovider">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.AccessProvider(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new AccessProvider expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/accessprovider">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateAccessProvider(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateAccessProvider expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">docs</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Abort(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Abort expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Call(FaunaDB.Query.Expr,FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Call expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Query(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Query expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.At(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new At expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Let(System.Collections.Generic.IReadOnlyDictionary{System.String,FaunaDB.Query.Expr},FaunaDB.Query.Expr)">
            <summary>
            Creates a new Let expression wrapping the provided map of bindings.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/let">FaunaDB Let Function</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Var(System.String)">
            <summary>
            Creates a new Var expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.If(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new If expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Do(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Do expression containing the provided expressions.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Lambda(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Lambda expression.
            <para>
            This is the raw version. Usually it's easier to use the overload.
            </para>
            <para>
            See <see cref="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>
            </para>
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <param name="vars">Variable names. Can be a single string or an array of strings</param>
            <param name="expr">Any composed expression created by <see cref="T:FaunaDB.Query.Language"/></param>
            <example>
            <code>
            var lambda1 = Lambda("a", Add(Var("a"), 1);
            var lambda2 = Lambda(Arr("a", "b"), Add(Var("a"), Var("b"));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a lambda expression that receives one argument.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <example>
            <code>
            var lambda = Lambda(a => a);
            </code>
            is equivalent to
            <code>
            var lambda = Lambda("a", Var("a"));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a lambda expression that receives two arguments.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <example>
            <code>
            var lambda = Lambda((a, b) => Add(a, b));
            </code>
            is equivalent to
            <code>
            var lambda = Lambda(Arr("a", "b"), Add(Var("a"), Var("b")));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a lambda expression that receives three arguments.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <example>
            <code>
            var lambda = Lambda((a, b, c) => Add(a, b, c));
            </code>
            is equivalent to
            <code>
            var lambda = Lambda(Arr("a", "b", "c"), Add(Var("a"), Var("b"), Var("c")));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a lambda expression that receives four arguments.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <example>
            <code>
            var lambda = Lambda((a, b, c, d) => Add(a, b, c, d));
            </code>
            is equivalent to
            <code>
            var lambda = Lambda(Arr("a", "b", "c", "d"), Add(Var("a"), Var("b"), Var("c"), Var("d")));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a lambda expression that receives five arguments.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <example>
            <code>
            var lambda = Lambda((a, b, c, d, e) => Add(a, b, c, d, e));
            </code>
            is equivalent to
            <code>
            var lambda = Lambda(Arr("a", "b", "c", "d", "e"), Add(Var("a"), Var("b"), Var("c"), Var("d"), Var("e")));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Lambda(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a lambda expression that receives six arguments.
            <para>
            See the <see href="https://fauna.com/documentation/queries#basic_forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <example>
            <code>
            var lambda = Lambda((a, b, c, d, e, f) => Add(a, b, c, d, e, f));
            </code>
            is equivalent to
            <code>
            var lambda = Lambda(Arr("a", "b", "c", "d", "f"), Add(Var("a"), Var("b"), Var("c"), Var("d"), Var("f")));
            </code>
            </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Let(System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Let expression with the provided bindings.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#basic-forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <param name="k0">First variable name</param>
            <param name="v0">First variable value</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Let(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Let expression with the provided bindings.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#basic-forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <param name="k0">First variable name</param>
            <param name="v0">First variable value</param>
            <param name="k1">Second variable name</param>
            <param name="v1">Second variable value</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Let(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Let expression with the provided bindings.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#basic-forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <param name="k0">First variable name</param>
            <param name="v0">First variable value</param>
            <param name="k1">Second variable name</param>
            <param name="v1">Second variable value</param>
            <param name="k2">Third variable name</param>
            <param name="v2">Third variable value</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Let(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Let expression with the provided bindings.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#basic-forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <param name="k0">First variable name</param>
            <param name="v0">First variable value</param>
            <param name="k1">Second variable name</param>
            <param name="v1">Second variable value</param>
            <param name="k2">Third variable name</param>
            <param name="v2">Third variable value</param>
            <param name="k3">Fourth variable name</param>
            <param name="v3">Fourth variable value</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Let(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Let expression with the provided bindings.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#basic-forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <param name="k0">First variable name</param>
            <param name="v0">First variable value</param>
            <param name="k1">Second variable name</param>
            <param name="v1">Second variable value</param>
            <param name="k2">Third variable name</param>
            <param name="v2">Third variable value</param>
            <param name="k3">Fourth variable name</param>
            <param name="v3">Fourth variable value</param>
            <param name="k4">Fifth variable name</param>
            <param name="v4">Fifth variable value</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Let(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Let expression with the provided bindings.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#basic-forms">FaunaDB Basic Forms</see>.
            </para>
            </summary>
            <param name="k0">First variable name</param>
            <param name="v0">First variable value</param>
            <param name="k1">Second variable name</param>
            <param name="v1">Second variable value</param>
            <param name="k2">Third variable name</param>
            <param name="v2">Third variable value</param>
            <param name="k3">Fourth variable name</param>
            <param name="v3">Fourth variable value</param>
            <param name="k4">Fifth variable name</param>
            <param name="v4">Fifth variable value</param>
            <param name="k5">Sixth variable name</param>
            <param name="v5">Sixth variable value</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
             <summary>
             Creates a new Map expression.
             <para>
             <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
             </para>
             <para>
             This is the raw version. Usually it's easier to use the overload.
             </para>
             <para>
             See <see cref="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>
             </para>
             </summary>
             <param name="collection">A collection expression</param>
             <param name="lambda">Lambda expression created by <see cref="M:FaunaDB.Query.Language.Lambda(FaunaDB.Query.Expr,FaunaDB.Query.Expr)"/></param>
             <example>
             <code>
             var result = await client.Query(Arr(1, 2, 3), Lambda("i", Multiply(Var("i"), 2)));
            
             Assert.AreEqual(Arr(2, 4, 6), result);
             </code>
             </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Foreach expression.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            <para>
            See <see cref="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
            <see cref="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>
            </para>
            <para>
            This is the raw version. Usually it's easier to use the overload.
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">Lambda expression created by <see cref="M:FaunaDB.Query.Language.Lambda(FaunaDB.Query.Expr,FaunaDB.Query.Expr)"/></param>
        </member>
        <member name="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
             <summary>
             Creates a new Filter expression.
             <para>
             <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
             </para>
             <para>
             This is the raw version. Usually it's easier to use the overload.
             </para>
             <para>
             See <see cref="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>,
             <see cref="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})"/>
             </para>
             </summary>
             <param name="collection">A collection expression</param>
             <param name="lambda">Lambda expression created by <see cref="M:FaunaDB.Query.Language.Lambda(FaunaDB.Query.Expr,FaunaDB.Query.Expr)"/>. It must return a boolean value.</param>
             <example>
             <code>
             var result = await client.Query(Filter(Arr(1, 2, 3, 4), Lambda("i", GT(Var("i"), 2))));
            
             Assert.AreEqual(Arr(3, 4), result);
             </code>
             </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Take(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
             <summary>
             Creates a new Take expression.
             <para>
             <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
             </para>
             </summary>
             <param name="number">Number of elements to take from the head of collection</param>
             <param name="collection">A collection expression</param>
             <example>
             <code>
             var result = await client.Query(Take(2, Arr(1, 2, 3)));
            
             Assert.AreEqual(Arr(1, 2), result);
             </code>
             </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Drop(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
             <summary>
             Creates a new Drop expression.
             <para>
             <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
             </para>
             </summary>
             <param name="number">Number of elements to drop from the head of collection</param>
             <param name="collection">A collection expression</param>
             <example>
             <code>
             var result = await client.Query(Drop(2, Arr(1, 2, 3)));
            
             Assert.AreEqual(Arr(3), result);
             </code>
             </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Prepend(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
             <summary>
             Creates a new Prepend expression.
             <para>
             <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
             </para>
             </summary>
             <param name="elements">Elements to be prepended into the collection</param>
             <param name="collection">A collection expression</param>
             <example>
             <code>
             var result = await client.Query(Prepend(Arr(1, 2, 3), Arr(4, 5, 6)));
            
             Assert.AreEqual(Arr(1, 2, 3, 4, 5, 6), result);
             </code>
             </example>
        </member>
        <member name="M:FaunaDB.Query.Language.Append(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
             <summary>
             Creates a new Append expression.
             <para>
             <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
             </para>
             </summary>
             <param name="elements">Elements to be appended into the collection</param>
             <param name="collection">A collection expression</param>
             <example>
             <code>
             var result = await client.Query(Append(Arr(4, 5, 6), Arr(1, 2, 3)));
            
             Assert.AreEqual(Arr(1, 2, 3, 4, 5, 6), result);
             </code>
             </example>
        </member>
        <!-- Badly formed XML comment ignored for member "M:FaunaDB.Query.Language.IsEmpty(FaunaDB.Query.Expr)" -->
        <!-- Badly formed XML comment ignored for member "M:FaunaDB.Query.Language.IsNonEmpty(FaunaDB.Query.Expr)" -->
        <!-- Badly formed XML comment ignored for member "M:FaunaDB.Query.Language.Reverse(FaunaDB.Query.Expr)" -->
        <!-- Badly formed XML comment ignored for member "M:FaunaDB.Query.Language.All(FaunaDB.Query.Expr)" -->
        <!-- Badly formed XML comment ignored for member "M:FaunaDB.Query.Language.Any(FaunaDB.Query.Expr)" -->
        <member name="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Filter expression with a lambda function that receives one argument.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives one argument</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Filter expression with a lambda function that receives two arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives two arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Filter expression with a lambda function that receives three arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives three arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Filter expression with a lambda function that receives four arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives four arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Filter expression with a lambda function that receives five arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives five arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Filter(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Filter expression with a lambda function that receives six arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives six arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Foreach expression with a lambda function that receives one argument.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives one argument</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Foreach expression with a lambda function that receives two arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives two arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Foreach expression with a lambda function that receives three arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives three arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Foreach expression with a lambda function that receives four arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives four arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Foreach expression with a lambda function that receives five arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives five arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Foreach(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Foreach expression with a lambda function that receives six arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives six arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Map expression with a lambda function that receives one argument.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives one argument</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Map expression with a lambda function that receives two arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives two arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Map expression with a lambda function that receives three arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives three arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Map expression with a lambda function that receives four arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives four arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Map expression with a lambda function that receives five arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives five arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Map(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Map expression with a lambda function that receives six arguments.
            <para>
            <see href="https://fauna.com/documentation/queries#collection_functions">FaunaDB Collection Functions</see>
            </para>
            </summary>
            <param name="collection">A collection expression</param>
            <param name="lambda">A lambda function that receives six arguments</param>
        </member>
        <member name="M:FaunaDB.Query.Language.NextId">
            <summary>
            Creates a new NextId expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.NewId">
            <summary>
            Creates a new NewId expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Database(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Database expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Index(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Index expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Collection(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Collection expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/collection">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Class(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Class expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Function(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Function expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Role(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Role expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Collections(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to collections object. Useful to paginate over all classes of a given scope database.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/collections">FaunaDB Collections</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Classes(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to classes object. Useful to paginate over all classes of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Indexes(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to indexes object. Useful to paginate over all indexes of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Databases(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to databases object. Useful to paginate over all databases of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Functions(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to functions object. Useful to paginate over all functions of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Roles(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to roles object. Useful to paginate over all roles of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Keys(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to keys object. Useful to paginate over all keys of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Tokens(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to tokens object. Useful to paginate over all tokens of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Credentials(FaunaDB.Query.Expr)">
            <summary>
            Returns an internal reference to credentials object. Useful to paginate over all credentials of a given scope database.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.EqualsFn(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Equals expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Contains(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Contains expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ContainsField(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new ContainsField expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/containsfield">FaunaDB ConstainsField Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ContainsValue(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new ContainsValue expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/containsvalue">FaunaDB ConstainsValue Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Contains(FaunaDB.Query.Language.PathSelector,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Contains expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ContainsPath(FaunaDB.Query.Language.PathSelector,FaunaDB.Query.Expr)">
            <summary>
            Creates a new ContainsPath expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/containspath">FaunaDB ConstainsPath Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ContainsPath(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new ContainsPath expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/containspath">FaunaDB ConstainsPath Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Select(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Select expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Select(FaunaDB.Query.Language.PathSelector,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Select expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.SelectAll(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new SelectAll expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.SelectAll(FaunaDB.Query.Language.PathSelector,FaunaDB.Query.Expr)">
            <summary>
            Creates a new SelectAll expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Add(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Add expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Multiply(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Multiply expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Subtract(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Subtract expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Divide(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Divide expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Modulo(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Modulo expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.LT(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new LT expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.LTE(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new LTE expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.GT(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new GT expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.GTE(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new GTE expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.And(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new And expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Or(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Or expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Not(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Not expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToStringExpr(FaunaDB.Query.Expr)">
            <summary>
              Converts an expression to a string literal.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToNumber(FaunaDB.Query.Expr)">
            <summary>
              Converts an expression to a number literal.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToTime(FaunaDB.Query.Expr)">
            <summary>
              Converts an expresion to a time literal.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToSeconds(FaunaDB.Query.Expr)">
            <summary>
             Converts a time expression to seconds since the UNIX epoch.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToMillis(FaunaDB.Query.Expr)">
            <summary>
             Converts a time expression to milliseconds since the UNIX epoch.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToMicros(FaunaDB.Query.Expr)">
            <summary>
             Converts a time expression to microseconds since the UNIX epoch.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.DayOfYear(FaunaDB.Query.Expr)">
            <summary>
             Returns a time expression's day of the year, from 1 to 365, or 366 in a leap year.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.DayOfMonth(FaunaDB.Query.Expr)">
            <summary>
             Returns a time expression's day of the month, from 1 to 31.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.DayOfWeek(FaunaDB.Query.Expr)">
            <summary>
             Returns a time expression's day of the week following ISO-8601 convention, from 1 (Monday) to 7 (Sunday).
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Year(FaunaDB.Query.Expr)">
            <summary>
             Returns the time expression's year, following the ISO-8601 standard.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Month(FaunaDB.Query.Expr)">
            <summary>
             Returns a time expression's month of the year, from 1 to 12.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Hour(FaunaDB.Query.Expr)">
            <summary>
             Returns a time expression's hour of the day, from 0 to 23.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Minute(FaunaDB.Query.Expr)">
            <summary>
             Returns a time expression's minute of the hour, from 0 to 59.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Second(FaunaDB.Query.Expr)">
            <summary>
             Returns a time expression's second of the minute, from 0 to 59.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToDate(FaunaDB.Query.Expr)">
            <summary>
              Converts an expression to a date literal.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Merge(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Merges two or more objects
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Merge(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Merges two or more objects
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Merge(FaunaDB.Query.Expr,FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
              Merges two or more objects
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Abs(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Abs expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/abs">FaunaDB Abs Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Acos(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Acos expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/acos">FaunaDB Acos Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Asin(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Asin expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/asin">FaunaDB Asin Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Atan(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Atan expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/atan">FaunaDB Atan Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.BitAnd(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new BitAnd expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/bitand">FaunaDB BitAnd Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.BitNot(FaunaDB.Query.Expr)">
            <summary>
            Creates a new BitNot expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/bitnot">FaunaDB BitNot Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.BitOr(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new BitOr expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/bitor">FaunaDB BitOr Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.BitXor(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new BitXor expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/bitxor">FaunaDB BitXor Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Ceil(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Ceil expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/ceil">FaunaDB Ceil Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Cos(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Cos expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/cos">FaunaDB Cos Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Cosh(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Cosh expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/cosh">FaunaDB Cosh Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Degrees(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Degrees expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/degrees">FaunaDB Degrees Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Exp(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Exp expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/exp">FaunaDB Exp Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Floor(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Floor expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/floor">FaunaDB Floor Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Hypot(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Hypot expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/hypot">FaunaDB Hypot Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Ln(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Ln expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/ln">FaunaDB Ln Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Log(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Log expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/log">FaunaDB Log Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Max(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Max expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/max">FaunaDB Max Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Min(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Min expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/min">FaunaDB Min Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Pow(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Pow expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/pow">FaunaDB Pow Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Radians(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Radians expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/radians">FaunaDB Radians Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Round(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Round expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/round">FaunaDB Round Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Sign(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Sign expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/sign">FaunaDB Sign Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Sin(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Sin expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/sin">FaunaDB Sin Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Sinh(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Sinh expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/sinh">FaunaDB Sinh Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Sqrt(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Sqrt expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/sqrt">FaunaDB Sqrt Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Tan(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Tan expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/tan">FaunaDB Tan Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Tanh(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Tanh expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/tanh">FaunaDB Tanh Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Trunc(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Trunc expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/trunc">FaunaDB Trunc Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.FindStr(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Returns the offset position of a string in another string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/findstr">FaunaDB FindStr Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.FindStrRegex(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Returns an array of up to 1024 objects describing where the pattern is found in the search string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/findstrregex">FaunaDB FindStrRegex Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Length(FaunaDB.Query.Expr)">
            <summary>
              Returns the number of code points in the string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/length">FaunaDB Length Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.LowerCase(FaunaDB.Query.Expr)">
            <summary>
              Returns a string in which all uppercase characters have been replaced by their corresponding lowercase characters.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/lowercase">FaunaDB LowerCase Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.LTrim(FaunaDB.Query.Expr)">
            <summary>
              Removes all white spaces, tabs, and new lines from the beginning of a string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/ltrim">FaunaDB Ltrim Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Repeat(FaunaDB.Query.Expr)">
            <summary>
              Returns a string consisting of the value string repeated number times.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/repeat">FaunaDB Repeat Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Repeat(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Returns a string consisting of the value string repeated number times.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/repeat">FaunaDB Repeat Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ReplaceStr(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Replaces a string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/replacestr">FaunaDB ReplaceStr Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ReplaceStrRegex(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Replaces all the occurrences (or the first one) of find pattern substituted with replace string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/replacestrregex">FaunaDB Length Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.RTrim(FaunaDB.Query.Expr)">
            <summary>
              Replaces a string inside.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/rtrim">FaunaDB RTrim Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Space(FaunaDB.Query.Expr)">
            <summary>
              Replaces a string inside.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/space">FaunaDB Space Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.SubString(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
              Returns a portion of the string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/substring">FaunaDB SubString Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.TitleCase(FaunaDB.Query.Expr)">
            <summary>
              Returns a string which has the first letter of each word capitalized.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/titlecase">FaunaDB TitleCase Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Trim(FaunaDB.Query.Expr)">
            <summary>
              Returns a string which has both the leading and trailing white spaces, tabs, and new lines removed.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/trim">FaunaDB Trim Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.UpperCase(FaunaDB.Query.Expr)">
            <summary>
              Returns a string which has all lowercase characters in the string replaced by their corresponding uppercase characters.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/uppercase">FaunaDB UpperCase Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.StartsWith(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/startswith">FaunaDB StartsWith Function</see>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.EndsWith(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/endswith">FaunaDB EndsWith Function</see>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ContainsStr(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/containsstr">FaunaDB ContainsStr Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ContainsStrRegex(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/containsstrregex">FaunaDB ContainsStrRegex Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.RegexEscape(FaunaDB.Query.Expr)">
            <summary>
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/regexescape">FaunaDB RegexEscape Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Documents(FaunaDB.Query.Expr)">
            <summary>
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/documents">FaunaDB Documents Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToArray(FaunaDB.Query.Expr)">
            <summary>
            Try to convert an object into an array of (field, value).
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/toarray">ToArray</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToObject(FaunaDB.Query.Expr)">
            <summary>
            Try to convert an array of (field, value) into an object.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/toobject">ToObject</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToDouble(FaunaDB.Query.Expr)">
            <summary>
            Casts an expression to a double value, if possible.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/todouble">ToDouble</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.ToInteger(FaunaDB.Query.Expr)">
            <summary>
            Casts an expression to an integer value, if possible.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/tointeger">ToInteger</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Get(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Get expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#read_functions">FaunaDB Read Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.KeyFromSecret(FaunaDB.Query.Expr)">
            <summary>
            Creates a new KeyFromSecret expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#read_functions">FaunaDB Read Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Paginate(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Language.Cursor)">
            <summary>
            Creates a new Paginate expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/paginate">FaunaDB Paginate Function</see>
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Query.Language.Cursor">
            <summary>
            Creates a new Cursor to be used with a Paginate expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/paginate">FaunaDB Paginate Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Exists(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Exists expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#read_functions">FaunaDB Read Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Reduce(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Exists expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/reduce">FaunaDB Reduce Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Reduce(System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr},FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Exists expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/reduce">FaunaDB Reduce Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Count(FaunaDB.Query.Expr)">
            <summary>
            Returns the number of items that exist in the array or set
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/count">FaunaDB Count Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Sum(FaunaDB.Query.Expr)">
            <summary>
            Returns the sum of all items.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/sum">FaunaDB Sum Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Mean(FaunaDB.Query.Expr)">
            <summary>
            Returns the average value of the items.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/mean">FaunaDB Mean Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Singleton(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Singleton expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Events(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Events expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Match(FaunaDB.Query.Expr,FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Match expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Union(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Union expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Intersection(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Intersection expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Difference(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Difference expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Distinct(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Distinct expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Join(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Join expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            <para>
            This is the raw version. Usually it's easier to use the overload.
            </para>
            </summary>
            <param name="source">A set resulting from one of the Set Functions</param>
            <param name="target">Can be either an index reference or a lambda function</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Range(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Filters the set based on the lower/upper bounds (inclusive).
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/range">FaunaDB Range Function</see>
            </para>
            </summary>
            <param name="set">set to be filtered</param>
            <param name="from">lower bound</param>
            <param name="to">upper bound</param>
        </member>
        <member name="M:FaunaDB.Query.Language.Join(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Join expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Join(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Join expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Join(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Join expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Join(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Join expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Join(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Join expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Join(FaunaDB.Query.Expr,System.Func{FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Join expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#sets">FaunaDB Set Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Concat(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Concat expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#string-functions">FaunaDB String Functions</see>
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Query.Language.Normalizer">
            <summary>
            Possible normalizer values accepted by <see cref="M:FaunaDB.Query.Language.Casefold(FaunaDB.Query.Expr,FaunaDB.Query.Language.Normalizer)"/>.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#time-and-date">FaunaDB Time and Date Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Casefold(FaunaDB.Query.Expr,FaunaDB.Query.Language.Normalizer)">
            <summary>
            Creates a new Casefold expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#string-functions">FaunaDB String Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Casefold(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Casefold expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#string-functions">FaunaDB String Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.NGram(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new NGram expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#string-functions">FaunaDB String Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Format(FaunaDB.Query.Expr,FaunaDB.Query.Expr[])">
            <summary>
            Format values into string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/format">FaunaDB Format Function</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Time(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Time expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#time_functions">FaunaDB Time and Date Functions</see>
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Query.Language.TimeUnit">
            <summary>
            Possible time units accepted by <see cref="M:FaunaDB.Query.Language.Epoch(FaunaDB.Query.Expr,FaunaDB.Query.Language.TimeUnit)"/>.
            <para>
            See the <see href="https://fauna.com/documentation/queries#time_functions">FaunaDB Time and Date Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Epoch(FaunaDB.Query.Expr,FaunaDB.Query.Language.TimeUnit)">
            <summary>
            Creates a new Epoch expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#time_functions">FaunaDB Time and Date Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Epoch(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Epoch expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#time_functions">FaunaDB Time and Date Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Date(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Date expression.
            <para>
            See the <see href="https://fauna.com/documentation/queries#time_functions">FaunaDB Time and Date Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Now">
            <summary>
            Constructs a Timestamp representing the transaction’s start time.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/now">FaunaDB Now Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.TimeAdd(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Returns a new time or date with the offset in terms of the unit added.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/timeadd">TimeAdd</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.TimeSubtract(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Returns a new time or date with the offset in terms of the unit subtracted.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/timesubtract">TimeSubtract</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.TimeDiff(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Returns the number of intervals in terms of the unit between
            two times or dates. Both start and finish must be of the same type.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/timediff">TimeDiff</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsArray(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is an array.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isarray">IsArray</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsBoolean(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a boolean.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isboolean">IsBoolean</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsBytes(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a byte array.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isbytes">IsBytes</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsCollection(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a collection.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/iscollection">IsCollection</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsCredentials(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a credentials.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/iscredentials">IsCredentials</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsDatabase(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a database.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isdatabase">IsDatabase</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsDate(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a date.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isdate">IsDate</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsDoc(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a document (either a reference or an instance).
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isdoc">IsDoc</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsDouble(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a double.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isdouble">IsDouble</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsFunction(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a function.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isfunction">IsFunction</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsIndex(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is an index.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isindex">IsIndex</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsInteger(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is an integer.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isinteger">IsInteger</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsKey(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a key.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/iskey">IsKey</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsLambda(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a lambda.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/islambda">IsLambda</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsNull(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is null.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isnull">IsNull</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsNumber(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a number.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isnumber">IsNumber</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsObject(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is an object.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isobject">IsObject</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsRef(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a reference.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isref">IsRef</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsRole(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a role.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isrole">IsRole</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsSet(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a set.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isset">IsSet</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsString(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a string.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/isstring">IsString</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsTimestamp(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a timestamp.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/istimestamp">IsTimestamp</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.IsToken(FaunaDB.Query.Expr)">
            <summary>
            Check if the expression is a token.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/istoken">IsToken</see>.
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Query.Language.PathSelector">
            <summary>
            Builder for path selectors.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#miscellaneous-functions">FaunaDB Miscellaneous Functions</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.PathSelector.At(System.String[])">
            <summary>
            Narrow to a specific path on a object node.
            </summary>
            <param name="others">A list of nested fields</param>
            <returns>A new narrowed path</returns>
        </member>
        <member name="M:FaunaDB.Query.Language.PathSelector.At(System.Int32[])">
            <summary>
            Narrow to a specific element index on a array node.
            </summary>
            <param name="others">A list of nested indexes</param>
            <returns>A new narrowed path</returns>
        </member>
        <member name="M:FaunaDB.Query.Language.Path(System.String[])">
            <summary>
            Helper for constructing a <see cref="T:FaunaDB.Query.Language.PathSelector"/> with the given path terms.
            <para>
            See <see cref="T:FaunaDB.Query.Language.PathSelector"/>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Path(System.Int32[])">
            <summary>
            Helper for constructing a <see cref="T:FaunaDB.Query.Language.PathSelector"/> with the given path terms.
            <para>
            See <see cref="T:FaunaDB.Query.Language.PathSelector"/>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Path(FaunaDB.Query.Expr[])">
            <summary>
            Helper for constructing a <see cref="T:FaunaDB.Query.Language.PathSelector"/> with the given expression.
            <para>
            See <see cref="T:FaunaDB.Query.Language.PathSelector"/>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Null">
            <summary>
            Creates a null value.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Ref(System.String)">
            <summary>
            Creates a ref value from a string.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Ref(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Calls ref function to create a ref value.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Ts(System.DateTime)">
            <summary>
            Creates a new Timestamp value.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Ts(System.String)">
            <summary>
            Creates a new Timestamp value.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Dt(System.DateTime)">
            <summary>
            Creates a new Date value.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Dt(System.String)">
            <summary>
            Creates a new Date value.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Arr(FaunaDB.Query.Expr[])">
            <summary>
            Creates a new Array value containing the provided entries.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Arr(System.Collections.Generic.IEnumerable{FaunaDB.Query.Expr})">
            <summary>
            Creates a new Array value containing the provided enumerable of values.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj(System.Collections.Generic.IReadOnlyDictionary{System.String,FaunaDB.Query.Expr})">
            <summary>
            Creates a new Object value wrapping the provided map.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Bytes(System.Byte[])">
            <summary>
            Creates a new Bytes value
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj">
            <summary>
            Creates a new empty Object value.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj(System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Object value with the provided entries.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Object value with the provided entries.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Object value with the provided entries.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Object value with the provided entries.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Object value with the provided entries.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Obj(System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr,System.String,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Object value with the provided entries.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#simple-type">FaunaDB Values</see>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Create(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Create expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Update(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Update expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Replace(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Replace expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Delete(FaunaDB.Query.Expr)">
            <summary>
            Creates a new Delete expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Query.Language.ActionType">
            <summary>
            Possible actions for functions <see cref="M:FaunaDB.Query.Language.Insert(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Language.ActionType,FaunaDB.Query.Expr)"/> and <see cref="M:FaunaDB.Query.Language.Remove(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Language.ActionType)"/>.
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Insert(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Language.ActionType,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Insert expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Insert(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Insert expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Remove(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Language.ActionType)">
            <summary>
            Creates a new Remove expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.Remove(FaunaDB.Query.Expr,FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Creates a new Remove expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateClass(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateClass expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateCollection(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateCollection expression.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/createcollection">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateDatabase(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateDatabase expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateIndex(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateIndex expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateKey(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateKey expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateFunction(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateFunction expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.CreateRole(FaunaDB.Query.Expr)">
            <summary>
            Creates a new CreateRole expression.
            <para>
            See the <see href="https://app.fauna.com/documentation/reference/queryapi#write-functions">FaunaDB Write Functions</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Query.Language.MoveDatabase(FaunaDB.Query.Expr,FaunaDB.Query.Expr)">
            <summary>
            Moves a database to a new hierarchy.
            <para>
            See the <see href="https://docs.fauna.com/fauna/current/api/fql/functions/movedatabase">FaunaDB MoveDatabase Function</see>.
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Types.ArrayV">
            <summary>
            Represents an array value in the FaunaDB query language. Arrays are polymorphic ordered lists of other values.
            </summary>
        </member>
        <member name="P:FaunaDB.Types.ArrayV.Item(System.Int32)">
            <summary>
            Get the nth value.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="T:FaunaDB.Types.FaunaFieldAttribute">
             <summary>
             Maps a property/field member constructor parameter to FaunaDB object property while encoding/deconding an object.
             If this attribute if not specified the property/field name constructor parameter name will be used instead.
             </summary>
             <example>
             class Car
             {
                 [FaunaField("model")]
                 public string Model { get; set; }
            
                 [FaunaField("manufacturer")]
                 public string Manufacturer { get; set; }
             }
            
             var car = new Car { Model = "DeLorean DMC-12", Manufacturer = "DeLorean Motor Company" };
            
             var encoded = Encoder.Encode(car);
            
             //encoded will be equivalent to:
            
             ObjectV.With("model", "DeLorean DMC-12", "manufacturer", "DeLorean Motor Company")
            
             class Product
             {
                 private string description;
                 private double price;
            
                 [FaunaConstructor]
                 public Product([FaunaField("Description")] string description, [FaunaField("Price")] double price)
                 {
                     this.description = description;
                     this.price = price;
                 }
             }
             </example>
        </member>
        <member name="P:FaunaDB.Types.FaunaFieldAttribute.Name">
            <summary>
            The name of the property when encoding/decoding objects.
            </summary>
        </member>
        <member name="P:FaunaDB.Types.FaunaFieldAttribute.DefaultValue">
            <summary>
            The default value used for a missing property when decoding an object.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.FaunaDate">
             <summary>
             Instruct the encoder that this <see cref="T:System.DateTime"/> property should always be
             converted to <see cref="T:FaunaDB.Types.DateV"/>
             </summary>
             <example>
             class User
             {
                 [FaunaDate]
                 public DateTime Birthday { get; set; }
             }
            
             var user = new User { Birthday = DateTime.Now };
            
             var encoded = Encoder.Encode(user);
             </example>
        </member>
        <member name="T:FaunaDB.Types.FaunaTime">
             <summary>
             Instruct the encoder that this <see cref="T:System.DateTime"/> property should always be
             converted to <see cref="T:FaunaDB.Types.TimeV"/>
             </summary>
             <example>
             class User
             {
                 [FaunaTime]
                 public DateTime TimeSignedUp { get; set; }
             }
            
             var user = new User { TimeSignedUp = DateTime.Now };
            
             var encoded = Encoder.Encode(user);
             </example>
        </member>
        <member name="T:FaunaDB.Types.FaunaString">
             <summary>
             Instruct the encoder that this object should be treated as a string when
             stored in Fauna. The Encoder will call the object or primative type's
             .ToString() method. The Decoder will attempt to create an object with the
             constructor with a single string parameter. If it does not have that
             constructor the Decoder will fail. For primatives the Decoder will attempt
             to use standard system conversions to convert the string back to the
             primative type.
             </summary>
             <example>
             class Website
             {
                 [FaunaString]
                 public Uri MyLink { get; set; }
             }
            
             var web = new Website { MyLink = new Uri("http://fauanadb.com") };
            
             var encodedWebsite = Encoder.Encode(web);
             </example>
        </member>
        <member name="T:FaunaDB.Types.FaunaIgnoreAttribute">
             <summary>
             Instruct the encoder to not encode the specified member.
             </summary>
             <example>
             class User
             {
                 [FaunaField("user_name")]
                 public string UserName { get; set; }
            
                 [FaunaIgnore]
                 public string Password { get; set; }
             }
            
             var user = new User { UserName = "john", Password = "s3cr3t" };
            
             var encoded = Encoder.Encode(user);
            
             //encoded will be equivalent to:
            
             ObjectV.With("user_name", "john")
             </example>
        </member>
        <member name="T:FaunaDB.Types.FaunaConstructorAttribute">
             <summary>
             Instruct the decoder wich constructor to use when decoding a object.
             It can also be used in a public static method instead in a constructor.
             That attribute can only be used once per class.
             </summary>
             <example>
             class Product
             {
                 public string Description { get; set; }
                 public double Price { get; set; }
            
                 [FaunaConstructor]
                 public Product(string description, double price)
                 {
                     Description = description;
                     Price = price;
                 }
             }
            
             class Order
             {
                 public string Number { get; set; }
                 public List&lt;Product&gt; Products { get; set; }
            
                 [FaunaConstructor]
                 public static Order CreateOrder(string number, List&lt;Product&gt; products)
                 {
                     return new Order
                     {
                         Number = number,
                         Products = products
                     }
                 }
             }
             </example>
        </member>
        <member name="T:FaunaDB.Types.FaunaEnum">
            <summary>
            Instruct the encoder/decoder to rename the annotated enum field.
            If not used the method <see cref="M:System.Enum.GetName(System.Type,System.Object)"/> will be used instead.
            </summary>
            <example>
            enum CpuTypes
            {
                [FaunaEnum("x86_32")] X86,
                [FaunaEnum("x86_64")] X86_64,
                ARM,
                MIPS
            }
            </example>
        </member>
        <member name="P:FaunaDB.Types.FaunaEnum.Alias">
            <summary>
            Alias used to encode/decode the enum value
            </summary>
        </member>
        <member name="T:FaunaDB.Types.BytesV">
            <summary>
            A FaunaDB bytes type.
            <para>
            See <see href="https://fauna.com/documentation/queries#values-special_types">FaunaDB Special Types</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Types.BytesV.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:FaunaDB.Types.BytesV"/> from a base64 string.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.BytesV.#ctor(System.Byte[])">
            <summary>
            Creates a new instance of <see cref="T:FaunaDB.Types.BytesV"/> from a variable lenght of bytes.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.BytesV.FromUrlSafeBase64(System.String)">
             <summary>
             Convert url-safe base64 encoded string to an array of bytes.
            
             <para>
             Given <see cref="M:System.Convert.FromBase64String(System.String)"/> does not support url-safe strings,
             that method substitute the character '_' to '/' and '-' to '+' before doing the conversion.
            
             More info in <see href="https://en.wikipedia.org/wiki/Base64#URL_applications">Wikipedia</see>
             </para>
             </summary>
        </member>
        <member name="M:FaunaDB.Types.BytesV.ToUrlSafeBase64(System.Byte[])">
             <summary>
             Convert an array of bytes to an url-safe base64 encoded string.
            
             <para>
             Given <see cref="M:System.Convert.ToBase64String(System.Byte[])"/> does not produce url-safe strings,
             that method substitute the character '+' to '-' and '/' to '_' after the conversion.
            
             More info in <see href="https://en.wikipedia.org/wiki/Base64#URL_applications">Wikipedia</see>
             </para>
             </summary>
        </member>
        <member name="T:FaunaDB.Types.Decoder">
            <summary>
            FaunaDB <see cref="T:FaunaDB.Types.Value"/> to object decoder.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.Decoder.Decode``1(FaunaDB.Types.Value)">
            <summary>
            Decode the FaunaDB value into the specified type T.
            </summary>
            <example>
            Decode&lt;int&gt;(LongV.Of(10)) => 10
            Decode&lt;double&gt;(DoubleV.Of(3.14)) => 3.14
            Decode&lt;bool&gt;(BooleanV.True) => true
            Decode&lt;object&gt;(NullV.Instance) => null
            Decode&lt;string&gt;(StringV.Of("a string")) => "a string"
            Decode&lt;int[]&gt;(ArrayV.Of(1, 2)) => new int[] { 1, 2 }
            Decode&lt;List&lt;int&gt;&gt;(ArrayV.Of(1, 2)) => new List&lt;int&gt;&gt; { 1, 2 }
            Decode&lt;byte[]&gt;(new ByteV(1, 2)) => new byte[] { 1, 2 }
            Decode&lt;DateTime&gt;(new TimeV("2000-01-01T01:10:30.123Z")) => new DateTime(2000, 1, 1, 1, 10, 30, 123)
            Decode&lt;DateTime&gt;(new DateV("2001-01-01")) => new DateTime(2001, 1, 1)
            Decode&lt;User&gt;(ObjectV.With("user_name", "john", "password", "s3cr3t")) => new User("john", "s3cr3t")
            </example>
            <returns>An instance of type T</returns>
            <param name="value">The FaunaDB value to be decoded</param>
            <typeparam name="T">The type name in which the value should be decoded</typeparam>
        </member>
        <member name="M:FaunaDB.Types.Decoder.Decode(FaunaDB.Types.Value,System.Type)">
            <summary>
            Decode the FaunaDB value into the type specified in the argument.
            </summary>
            <example>
            Decode(LongV.Of(10), typeof(int)) => 10
            Decode(DoubleV.Of(3.14), typeof(double)) => 3.14
            Decode(BooleanV.True, typeof(bool)) => true
            Decode(NullV.Instance, typeof(object)) => null
            Decode(StringV.Of("a string"), typeof(string)) => "a string"
            Decode(ArrayV.Of(1, 2), typeof(int[])) => new int[] { 1, 2 }
            Decode(ArrayV.Of(1, 2), typeof(List&lt;int&gt;&gt;)) => new List&lt;int&gt;&gt; { 1, 2 }
            Decode(new ByteV(1, 2), typeof(byte[])) => new byte[] { 1, 2 }
            Decode(new TimeV("2000-01-01T01:10:30.123Z"), typeof(DateTime)) => new DateTime(2000, 1, 1, 1, 10, 30, 123)
            Decode(new DateV("2001-01-01"), typeof(DateTime)) => new DateTime(2001, 1, 1)
            Decode(ObjectV.With("user_name", "john", "password", "s3cr3t"), typeof(User)) => new User("john", "s3cr3t")
            </example>
            <returns>An instance of type specified in the argument</returns>
            <param name="value">The FaunaDB value to be decoded</param>
            <param name="dstType">The type in which the value should be decoded</param>
        </member>
        <member name="T:FaunaDB.Types.Encoder">
            <summary>
            FaunaDB object to <see cref="T:FaunaDB.Types.Value"/> encoder.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.Encoder.Encode(System.Object)">
            <summary>
            Encode the specified object into a corresponding FaunaDB value.
            </summary>
            <example>
            Encode(10) => LongV.Of(10)
            Encode(3.14) => DoubleV.Of(3.14)
            Encode(true) => BooleanV.True
            Encode(null) => NullV.Instance
            Encode("a string") => StringV.Of("a string")
            Encode(new int[] {1, 2}) => ArrayV.Of(1, 2)
            Encode(new List&lt;int&gt; {1, 2}) => ArrayV.Of(1, 2)
            Encode(new byte[] {1, 2}) => new ByteV(1, 2)
            Encode(DateTime.Now) => new TimeV("2000-01-01T01:10:30.123Z")
            Encode(DateTime.Today) => new DateV("2001-01-01")
            Encode(user) => ObjectV.With("user_name", "john", "password", "s3cr3t")
            </example>
            <returns>A FaunaDB <see cref="T:FaunaDB.Types.Value"/> corresponding to the given argument</returns>
            <param name="obj">Any instance of user defined classes, primitive values or any
            generic collection like <see cref="T:System.Collections.Generic.IList`1"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
        </member>
        <member name="T:FaunaDB.Types.Field`1">
            <summary>
            A field extractor for a FaunaDB <see cref="T:FaunaDB.Types.Value"/>
            <para>
            See <see cref="T:FaunaDB.Types.Value"/>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Types.Field`1.At``1(FaunaDB.Types.Field{``0})">
            <summary>
            Creates a field extractor composed with another nested field
            </summary>
            <param name="other">nested field to compose with</param>
            <returns>a new field extractor with the nested field</returns>
        </member>
        <member name="M:FaunaDB.Types.Field`1.To``1">
            <summary>
            Creates a field extractor that coerces its value using the type specified
            </summary>
            <returns>a new field that coerces its value using the type specified</returns>
        </member>
        <member name="M:FaunaDB.Types.Field`1.Collect``1(FaunaDB.Types.Field{``0})">
            <summary>
            Creates a field extractor that collects each inner value of an array using the nested field passed,
            assuming the root value is an instance of <see cref="T:FaunaDB.Types.ArrayV"/>
            </summary>
            <param name="field">field to be extracted from each array's element</param>
            <returns>a new field that collects each inner value using the field passed</returns>
        </member>
        <member name="T:FaunaDB.Types.Field">
            <summary>
            A field extractor for a FaunaDB <see cref="T:FaunaDB.Types.Value"/>
            <para>
            See <see cref="T:FaunaDB.Types.Value"/>
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Types.Field.At(System.String[])">
            <summary>
            Creates a field that extracts its value from a object path, assuming the value
            is an instance of <see cref="T:FaunaDB.Types.ObjectV"/>.
            </summary>
            <param name="keys">path to the field</param>
            <returns>the field extractor</returns>
        </member>
        <member name="M:FaunaDB.Types.Field.At(System.Int32[])">
            <summary>
            Creates a field that extracts its value from a array index, assuming the value
            is an instance of <see cref="T:FaunaDB.Types.ArrayV"/>.
            </summary>
            <param name="indexes">indexes path to the value</param>
            <returns>the field extractor</returns>
        </member>
        <member name="M:FaunaDB.Types.Field.To``1">
            <summary>
            Creates a field that coerces its value using the type specified.
            </summary>
            <returns>the field extractor</returns>
        </member>
        <member name="T:FaunaDB.Types.NullV">
            <summary>
            Represents a null value in the FaunaDB query language.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.ObjectV">
            <summary>
            Represents an Object value in the FaunaDB query language. Objects are polymorphic dictionaries.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.ObjectV.#ctor(System.Action{System.Action{System.String,FaunaDB.Types.Value}})">
            <summary>
            Create from a builder expression.
            </summary>
            <param name="builder">
            A lambda <c>(add) => { ... }</c> that calls <c>add(key, value)</c> for each pair to be in the new ObjectV.
            </param>
        </member>
        <member name="P:FaunaDB.Types.ObjectV.Item(System.String)">
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:FaunaDB.Types.ObjectV.GetOrNull(System.String)">
            <summary>
            If there is no value at the given key, just return <c>null</c>.
            Otherwise, return the value.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.IOption`1">
            <summary>
            Represents an optional value.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.IOption`1.Map``1(System.Func{`0,``0})">
            <summary>
            Apply the function passed on the optional value.
            </summary>
            <param name="func">the map function to be applied</param>
            <returns>
            If this is a some value, return a new optional with the function applied to it.
            If this is a none value, returns none and ignore the function.
            </returns>
        </member>
        <member name="M:FaunaDB.Types.IOption`1.FlatMap``1(System.Func{`0,FaunaDB.Types.IOption{``0}})">
            <summary>
            Apply the function passed on the optional value.
            </summary>
            <param name="func">the map function to be applied</param>
            <returns>
            If this is a some value, return a new optional with the function applied to it.
            If this is a none value, returns none and ignore the function.
            </returns>
        </member>
        <member name="M:FaunaDB.Types.IOption`1.Match``1(System.Func{`0,``0},System.Func{``0})">
             <summary>
             Matches the current instance. Case it contains some value it will execute the first argument.
             Case it contains none value it will execute the second argument.
             </summary>
             <example>
             IOption&lt;string&gt; optional = ...
            
             int parsed = result.Match(
               Some: value => int.Parse(value),
               None: () => ReturnDefaultValue()
             );
             </example>
             <param name="Some">Function to be executed case this instance contains some value</param>
             <param name="None">Function to be executed case this instance contains none value</param>
        </member>
        <member name="M:FaunaDB.Types.IOption`1.Match(System.Action{`0},System.Action)">
             <summary>
             Matches the current instance. Case it contains some value it will execute the first argument.
             Case it contains none value it will execute the second argument.
             </summary>
             <example>
             IOption&lt;string&gt; optional = ...
            
             result.Match(
               Some: value => DoSomething(value),
               None: () => DoSomethingElse()
             );
             </example>
             <param name="Some">Function to be executed case this instance contains some value</param>
             <param name="None">Function to be executed case this instance contains none value</param>
        </member>
        <member name="T:FaunaDB.Types.Option">
            <summary>
            Represents an optional value.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.QueryV">
            <summary>
            Represents a query value in the FaunaDB query language.
            <para>
            See <see href="https://fauna.com/documentation/queries#values-special_types">FaunaDB Special Types</see>.
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Types.RefV">
            <summary>
            A FaunaDB ref type.
            <para>
            See <see href="https://app.fauna.com/documentation/reference/queryapi#special-type">FaunaDB Special Types</see>.
            </para>
            </summary>
        </member>
        <member name="T:FaunaDB.Types.IResult`1">
            <summary>
            Represents the result of an operation. Usually a coercion operation.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.IResult`1.Map``1(System.Func{`0,``0})">
            <summary>
            Apply the function passed on the result value.
            </summary>
            <param name="func">the map function to be applied</param>
            <returns>
            If this is a successful result, return a new successful result with the map function result.
            If this is a failure, returns a new failure with the same error message.
            </returns>
        </member>
        <member name="M:FaunaDB.Types.IResult`1.FlatMap``1(System.Func{`0,FaunaDB.Types.IResult{``0}})">
            <summary>
            Apply the function passed on the result value.
            </summary>
            <param name="func">the map function to be applied</param>
            <returns>
            If this is a successful result, returns the map function result.
            If this is a failure, returns a new failure with the same error message.
            </returns>
        </member>
        <member name="M:FaunaDB.Types.IResult`1.Match``1(System.Func{`0,``0},System.Func{System.String,``0})">
            <summary>
            Matches the current instance. Case it represents a successful result it will execute the first argument.
            Case it represents a failure object it will execute the second argument.
            </summary>
            <example>
            IResult&lt;string&gt; result = ...
            int parsed = result.Match(
              Success: value => int.Parse(value),
              Failure: reason => ReturnDefaultValue()
            );
            </example>
            <param name="Success">Function to be executed case this instance represents a successful result</param>
            <param name="Failure">Function to be executed case this instance represents a failure result</param>
        </member>
        <member name="M:FaunaDB.Types.IResult`1.Match(System.Action{`0},System.Action{System.String})">
             <summary>
             Matches the current instance. Case it represents a successful result it will execute the first argument.
             Case it represents a failure object it will execute the second argument.
             </summary>
             <example>
             IResult&lt;string&gt; result = ...
            
             result.Match(
               Success: value => DoSomething(),
               Failure: reason => DoSomethingElse(reason)
             );
             </example>
             <param name="Success">Action to be executed case this instance represents a successful result</param>
             <param name="Failure">Action to be executed case this instance represents a failure result</param>
        </member>
        <member name="P:FaunaDB.Types.IResult`1.Value">
            <summary>
            Extracts the resulting value or throw an exception if the operation has failed.
            </summary>
            <exception cref="T:System.InvalidOperationException" />
        </member>
        <member name="P:FaunaDB.Types.IResult`1.ToOption">
            <summary>
            Gets an <see cref="T:FaunaDB.Types.IOption`1"/> type containing the result value if the operation was successful,
            or <see cref="M:FaunaDB.Types.Option.None``1"/> if it was a failure
            </summary>
        </member>
        <member name="P:FaunaDB.Types.IResult`1.isSuccess">
            <summary>
            Return true if the operation was successful
            </summary>
        </member>
        <member name="P:FaunaDB.Types.IResult`1.isFailure">
            <summary>
            Return true if the operation has failed
            </summary>
        </member>
        <member name="T:FaunaDB.Types.Result">
            <summary>
            Represents the result of an operation. Usually a coercion operation.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.Result.Success``1(``0)">
            <summary>
            Creates a successful result
            </summary>
            <param name="value">result's value</param>
            <returns>a successful result</returns>
        </member>
        <member name="M:FaunaDB.Types.Result.Fail``1(System.String)">
            <summary>
            Creates failure result
            </summary>
            <param name="reason">the reason for the failure</param>
            <returns>a failure result</returns>
        </member>
        <member name="M:FaunaDB.Types.Result.Fail(System.String)">
            <summary>
            Creates failure result. Specialization for object type.
            </summary>
            <param name="reason">the reason for the failure</param>
            <returns>a failure result</returns>
        </member>
        <member name="T:FaunaDB.Types.ScalarValue`1">
            <summary>
            Represents a scalar value at the FaunaDB query language.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.BooleanV">
            <summary>
            Represents a Boolean value in the FaunaDB query language.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.DoubleV">
            <summary>
            Represents a Double value in the FaunaDB query language.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.LongV">
            <summary>
            Represents a Long value in the FaunaDB query language.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.StringV">
            <summary>
            Represents a String value in the FaunaDB query language.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.SetRefV">
            <summary>
            A FaunaDB set literal.
            See <see href="https://fauna.com/documentation/queries#values-special_types">FaunaDB Special Types</see>
            </summary>
        </member>
        <member name="T:FaunaDB.Types.ExprV">
            <summary>
            A FaunaDB Expression wrapped as a Value
            </summary>
        </member>
        <member name="T:FaunaDB.Types.TimeV">
            <summary>
            Represents a Timestamp value in the FaunaDB query language.
            <para>
            See the <see href="https://fauna.com/documentation/queries#values-special_types">FaunaDB Special Types</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Types.TimeV.#ctor(System.String)">
            <summary>
            Construct a TimeV from an iso8601 time string.
            It must use the 'Z' time zone.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.TimeV.#ctor(System.DateTime)">
            <summary>
            Construct a TimeV from a <see cref="T:System.DateTime"/> object.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.TimeV.op_Explicit(System.DateTime)~FaunaDB.Types.TimeV">
            <summary>
            Convert from a DateTime by rendering as iso8601.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.TimeV.op_Implicit(FaunaDB.Types.TimeV)~System.DateTime">
            <summary>
            Convert to DateTime.
            Since DateTime has millisecond precision, this is lossy.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.DateV">
            <summary>
            Represents a Date value in the FaunaDB query language.
            <para>
            See the <see href="https://fauna.com/documentation/queries#values-special_types">FaunaDB Special Types</see>.
            </para>
            </summary>
        </member>
        <member name="M:FaunaDB.Types.DateV.#ctor(System.String)">
            <summary>
            Construct a DateV from an iso8601 date string.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.DateV.#ctor(System.DateTime)">
            <summary>
            Construct a DateV from a <see cref="T:System.DateTime"/> object.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.DateV.op_Explicit(System.DateTime)~FaunaDB.Types.DateV">
            <summary>
            Convert from a DateTime by rendering as iso8601.
            This throws out time-of-day data.
            </summary>
        </member>
        <member name="M:FaunaDB.Types.DateTimeUtil.TruncateLastTwoDigits(System.String)">
            <summary>
            Given the response of the server use timestamps with high resolution it can represent
            timestamps with resolution of 1ns, like for example: 1970-01-01T00:00:00.000000001Z.
            However C# has a resolution of 100ns, so it cannot handle the last two digits of response.
            </summary>
        </member>
        <member name="T:FaunaDB.Types.Value">
             <summary>
             Represents any scalar or non-scalar value in the FaunaDB query language. FaunaDB value types consist of
             all of the JSON value types, as well as the FaunaDB-specific types, {@link RefV} and {@link SetRefV}.
             <para>
             Scalar values are <see cref="T:FaunaDB.Types.LongV"/>, <see cref="T:FaunaDB.Types.StringV"/>, <see cref="T:FaunaDB.Types.DoubleV"/>, <see cref="T:FaunaDB.Types.BooleanV"/>, <see cref="T:FaunaDB.Types.NullV"/>,
             <see cref="T:FaunaDB.Types.RefV"/>, and <see cref="T:FaunaDB.Types.SetRefV"/>.
             </para>
             <para>
             Non-scalar values are <see cref="T:FaunaDB.Types.ObjectV"/> and <see cref="T:FaunaDB.Types.ArrayV"/>.
             </para>
             <para>
             This interface itself does not have any directly accessible data. It must first be coerced into a type before
             its data can be accessed.
             </para>
             <para>
             See <see href="https://fauna.com/documentation/queries#values">FaunaDB Value Types</see>
             </para>
             </summary>
             <example>
             Consider the <see cref="T:FaunaDB.Types.Value"/> node modeling the root of the tree:
             <code>
             {
               "ref": { "@ref": { "id": "classes" } },
               "data": { "someKey": "string1", "someKey2": 123 }
             }
             </code>
             <para>
             The result tree can be accessed using:
             <code>
               Field&lt;RefV&gt; ref = Field.At("ref").To&lt;RefV&gt;();
               Field&lt;string&gt; someKey = Field.At("data", "someKey").To&lt;string&gt;();
               Field&lt;string&gt; nonExistingKey = Field.At("non-existing-key").To&lt;long&gt;();
            
               node.Get(ref); // new RefV("classes")
               node.Get(someKey); // "string1"
               node.GetOption(nonExistingKey) // Option.None&lt;string&gt;()
             </code>
             </para>
             <para>
             The interface also has helpers to transverse values without <see cref="T:FaunaDB.Types.Field"/> references:
             <code>
               node.At("ref").To&lt;RefV&gt;().Get(); // new RefV("classes")
               node.At("data", "someKey").To&lt;string&gt;().Get() // "string1"
               node.At("non-existing-key").To&lt;long&gt;().GetOption() // Option.None&lt;long&gt;()
             </code>
             </para>
             <para>
             See <see cref="T:FaunaDB.Types.Field"/>
             </para>
             </example>
        </member>
        <member name="M:FaunaDB.Types.Value.At(System.String[])">
            <summary>
            Navigate through object's keys, assuming value is an instance of <see cref="T:FaunaDB.Types.ObjectV"/>.
            </summary>
            <param name="keys">keys path to navigate to</param>
            <returns><see cref="T:FaunaDB.Types.Value"/> under the path or <see cref="T:FaunaDB.Types.NullV"/></returns>
        </member>
        <member name="M:FaunaDB.Types.Value.At(System.Int32[])">
            <summary>
            Navigate through array's indexes, assuming value is an instance of <see cref="T:FaunaDB.Types.ArrayV"/>.
            </summary>
            <param name="indexes">indexes path to navigate to</param>
            <returns><see cref="T:FaunaDB.Types.Value"/> under the path or <see cref="T:FaunaDB.Types.NullV"/></returns>
        </member>
        <member name="M:FaunaDB.Types.Value.To``1">
            <summary>
            Attempts to coerce this value to given type T specified.
            </summary>
            <typeparam name="T">The type name in which this value shoulbe be decoded</typeparam>
        </member>
        <member name="M:FaunaDB.Types.Value.Collect``1(FaunaDB.Types.Field{``0})">
             <summary>
             Loop through this node collecting the {@link Field} passed, assuming the node is an instance of {@link ArrayV}
             <para>
             See <see cref="T:FaunaDB.Types.Field"/>
             </para>
             </summary>
             <example>
             Consider the <see cref="T:FaunaDB.Types.Value"/> node modeling the root of the tree:
             <code>
             {
               "data": {
                 "arrayOfStrings": ["Jhon", "Bill"],
                 "arrayOfObjects": [ {"name": "Jhon"}, {"name": "Bill"} ]
                }
             }
             </code>
             <para>
             The result tree can be accessed using:
             <code>
               node.Get("arrayOfStrings").Collect(Field.To&lt;string&gt;()); // ["Jhon", "Bill"]
            
               Field&lt;string&gt; name = Field.At("name").To&lt;string&gt;();
               node.Get("arrayOfObjects").Collect(name); // ["Jhon", "Bill"]
             }
             </code>
             </para>
             </example>
             <param name="field">field to extract from each array value</param>
             <returns>a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> with the collected <see cref="T:FaunaDB.Types.Field"/></returns>
        </member>
        <member name="M:FaunaDB.Types.Value.Get``1(FaunaDB.Types.Field{``0})">
            <summary>
            Extract a <see cref="T:FaunaDB.Types.Field"/> from this node
            <para>
            See <see cref="T:FaunaDB.Types.Field"/>
            </para>
            </summary>
            <exception cref="T:System.InvalidOperationException" />
            <param name="field">field to extract</param>
            <returns>the resulting value of extracting the <see cref="T:FaunaDB.Types.Field"/> from this node</returns>
        </member>
        <member name="M:FaunaDB.Types.Value.GetOption``1(FaunaDB.Types.Field{``0})">
            <summary>
            Attempts to extact a <see cref="T:FaunaDB.Types.Field"/> from this node
            <para>
            See <see cref="T:FaunaDB.Types.Field"/>
            </para>
            </summary>
            <param name="field">field to extract</param>
            <returns>An <see cref="T:FaunaDB.Types.IOption`1"/> with the resulting value if the field's extraction was successful</returns>
        </member>
    </members>
</doc>
